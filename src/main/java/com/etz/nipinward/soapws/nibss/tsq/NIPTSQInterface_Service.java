
package com.etz.nipinward.soapws.nibss.tsq;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0-SNAPSHOT
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "NIPTSQInterface", targetNamespace = "http://core.nip.nibss/", wsdlLocation = "http://10.7.7.204:88/NIPWS/NIPTSQInterface?wsdl")
public class NIPTSQInterface_Service
    extends Service
{

    private static final String NAMESPACE_URI = "http://core.nip.nibss/";
    private static final URL NIPTSQINTERFACE_WSDL_LOCATION;
    private static final WebServiceException NIPTSQINTERFACE_EXCEPTION;
    private static final QName NIPTSQINTERFACE_QNAME = new QName(NAMESPACE_URI, "NIPTSQInterface");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://10.7.7.204:88/NIPWS/NIPTSQInterface?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        NIPTSQINTERFACE_WSDL_LOCATION = url;
        NIPTSQINTERFACE_EXCEPTION = e;
    }

    public NIPTSQInterface_Service() {
        super(__getWsdlLocation(), NIPTSQINTERFACE_QNAME);
    }

    public NIPTSQInterface_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), NIPTSQINTERFACE_QNAME, features);
    }

    public NIPTSQInterface_Service(URL wsdlLocation) {
        super(wsdlLocation, NIPTSQINTERFACE_QNAME);
    }

    public NIPTSQInterface_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, NIPTSQINTERFACE_QNAME, features);
    }

    public NIPTSQInterface_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NIPTSQInterface_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns NIPTSQInterface
     */
    @WebEndpoint(name = "NIPTQSInterfacePort")
    public NIPTSQInterface getNIPTQSInterfacePort() {
        return super.getPort(new QName(NAMESPACE_URI, "NIPTQSInterfacePort"), NIPTSQInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NIPTSQInterface
     */
    @WebEndpoint(name = "NIPTQSInterfacePort")
    public NIPTSQInterface getNIPTQSInterfacePort(WebServiceFeature... features) {
        return super.getPort(new QName(NAMESPACE_URI, "NIPTQSInterfacePort"), NIPTSQInterface.class, features);
    }

    private static URL __getWsdlLocation() {
        if (NIPTSQINTERFACE_EXCEPTION!= null) {
            throw NIPTSQINTERFACE_EXCEPTION;
        }
        return NIPTSQINTERFACE_WSDL_LOCATION;
    }

}
